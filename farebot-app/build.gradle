apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.neenbedankt.android-apt'

dependencies {
    compile project(':farebot-core')
    compile project(':farebot-card')
    compile project(':farebot-card-cepas')
    compile project(':farebot-card-classic')
    compile project(':farebot-card-desfire')
    compile project(':farebot-card-desfire')
    compile project(':farebot-card-felica')
    compile project(':farebot-card-ultralight')
    compile project(':farebot-transit')
    compile project(':farebot-transit-bilhete')
    compile project(':farebot-transit-clipper')
    compile project(':farebot-transit-edy')
    compile project(':farebot-transit-ezlink')
    compile project(':farebot-transit-hsl')
    compile project(':farebot-transit-manly')
    compile project(':farebot-transit-myki')
    compile project(':farebot-transit-octopus')
    compile project(':farebot-transit-opal')
    compile project(':farebot-transit-orca')
    compile project(':farebot-transit-ovc')
    compile project(':farebot-transit-seqgo')
    compile project(':farebot-transit-stub')
    compile project(':farebot-transit-suica')

    compile libs.playServicesMaps

    compile(libs.crashlytics) {
        transitive = true
    }

    // https://github.com/rharter/auto-value-gson/issues/80
    apt files(androidJar(this))

    provided libs.autoValue
    provided libs.autoValueGson
    apt libs.autoValue
    apt libs.autoValueParcel
    apt libs.autoValueGson
}

def askPassword() {
    return 'security -q find-generic-password -w -g -l farebot-release'.execute().text.trim()
}

gradle.taskGraph.whenReady { taskGraph ->
    if(taskGraph.hasTask(':assembleProdRelease')) {
        def password = askPassword()
        android.signingConfigs.release.storePassword = password
        android.signingConfigs.release.keyPassword = password
    }
}

android {
    defaultConfig {
        versionCode 21
        versionName '2.9.0'
    }

    signingConfigs {
        debug {
            storeFile file('../debug.keystore')
        }
        release {
            storeFile file('../release.keystore')
            keyAlias 'ericbutler'
            storePassword ''
            keyPassword ''
        }
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../config/proguard/proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}
